# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  slack: circleci/slack@4.0.0
jobs:
  build:
    working_directory: ~/linbridge
    docker:
      - image: circleci/android:api-29

    environment:
      JVM_OPTS: -Xmx3200m
      LINT_PRINT_STACKTRACE: true

    steps:
      - checkout
      - run: git submodule update --init --recursive

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Load parameters
          command: |
            echo sendgrid.mailto=$SENDGRID_MAILTO >> local.properties
            echo sendgrid.apikey=$SENDGRID_APIKEY >> local.properties

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Base64 decode firebase file
          command: echo $GOOGLE_SERVICES | base64 -d > app/google-services.json

      - run:
          name: Compile
          command: ./gradlew compileReleaseSources

      # run lint
      - run:
          name: Run lint check
          command: ./gradlew lintRelease

      - run:
          name: Save lint results
          command: |
            mkdir -p ~/lint/
            find . -type f -regex ".*/build/reports/lint-results-release.html" -exec cp {} ~/lint/ \;
            find . -type f -regex ".*/build/reports/lint-results-release.xml" -exec cp {} ~/lint/ \;
          when: always

      - store_artifacts:
          path: ~/lint
          destination: lint

      - persist_to_workspace:
          root: ./
          paths:
            - build
            - app/build
            - linbridge-api/build

  release:
    working_directory: ~/linbridge
    docker:
      - image: circleci/android:api-29

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run:
          name: Load signing keys
          command: |
            mkdir -p $(dirname $KEYSTORE_FILE)
            cd $(dirname $KEYSTORE_FILE)
            git clone git@github.com:suitepad-gmbh/apk_keystore.git .

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Load parameters
          command: |
            echo sendgrid.mailto=$SENDGRID_MAILTO >> local.properties
            echo sendgrid.apikey=$SENDGRID_APIKEY >> local.properties

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - attach_workspace:
          at: ./

      - run:
          name: Base64 decode firebase file
          command: echo $GOOGLE_SERVICES | base64 -d > app/google-services.json

      # run build
      - run:
          name: Build
          command: ./gradlew :app:assembleRelease

      - store_artifacts:
          path: app/build/outputs/apk/release
          destination: apk

      - persist_to_workspace:
          root: app/build/outputs/apk/
          paths:
            - release

  deploy:
    working_directory: ~/
    docker:
      - image: circleci/python:3.4-jessie

    steps:
      - attach_workspace:
          at: /tmp/artifacts

      - run:
          name: Loading tools
          command: |
            mkdir .ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > .ssh/config
            git clone git@github.com:suitepad-gmbh/apk_keystore.git release_tools

      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "release_tools/requirements.txt" }}

      - run:
          name: Download Dependencies
          command: |
            cd release_tools
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "release_tools/requirements.txt" }}
          paths:
            - release_tools/venv

      - run:
          name: Deploy to backend
          command: |
            . release_tools/venv/bin/activate
            python release_tools/deploy.py --manifest /tmp/artifacts/release/output.json \
              --app-id $APPLICATION_ID --token $BACKEND_TOKEN --user-id $BACKEND_USER_ID
  notify:
    working_directory: ~/linbridge
    docker:
      - image: circleci/node:stretch
    steps:
      - checkout
      - run:
          name: Preparing slack notification
          command: |
            echo export CHANGELOG=\"$(git log -1 --pretty=%B | sed -z 's/\n/\\n/g')\" >> $BASH_ENV
            echo export VERSION=$(git log -1 --pretty=%B | head -1) >> $BASH_ENV

      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                	"type": "plain_text",
                	"text": ":slightly_smiling_face: Linbridge: new version $VERSION available for testing",
                	"emoji": true
                  }
                },
                {
            	  "type": "section",
            	  "text": {
            		"type": "mrkdwn",
            		"text": "@here *CHANGELOG:* $CHANGELOG \n\n<https://backend.suitepad.de/#/admin/933/admin_area/apps/357/versions/index|Download here>"
            	  },
            	  "accessory": {
            		"type": "image",
            		"image_url": "https://github.com/suitepad-gmbh/icons/raw/master/default_apk.png",
            		"alt_text": "App icon"
            	  }
            	}
              ]
            }
          channel: C01CUUG1UE5
          branch_pattern: "()"
          event: always

workflows:
  version: 2
  Linbridge:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          context: apk_signing
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}.*/
      - hold:
          type: approval
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}.*/
      - deploy:
          context: apk_deployment
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}.*/
      - notify:
          name: notify_slack
          context: slack_notifier
          requires:
            - deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}.*/
